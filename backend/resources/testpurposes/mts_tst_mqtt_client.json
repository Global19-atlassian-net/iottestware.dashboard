{
  "meta": {},
  "tps": {
    "TP_MQTT_CLIENT_CONNACK_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a CONNACK message containing\n\t\t\theader_flags indicating value '1111'B;\n\t\t} then {\n\t\t\tthe IUT entity closes the TCP_CONNECTION\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNACK_01",
      "init": "\t\twith {\n\t\t\tthe IUT entity is triggered to send a CONNECT message\n\t\t}\n",
      "objective": "Verify that the IUT closes the network connection on receiption",
      "reference": "[MQTT-2.2.2-1], [MQTT-2.2.2-2], [MQTT-4.8.0-1]"
    },
    "TP_MQTT_CLIENT_CONNECT_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_01",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_CONNECT_02": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tprotocol_name corresponding to PROTOCOL_NAME;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_02",
      "init": "",
      "objective": "The protocol name representing the protocol is a UTF-8 encoded 'MQTT' string",
      "reference": "[MQTT-3.1.2-1]"
    },
    "TP_MQTT_CLIENT_CONNECT_03": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tprotocol_level indicating value 0x04;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_03",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with Protocol Level 0x04 for MQTT 3.1.1",
      "reference": "[MQTT-3.1.2-2]"
    },
    "TP_MQTT_CLIENT_CONNECT_04": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\treserved_field indicating value '0'B;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_04",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with valid reserved flag.",
      "reference": "[MQTT-3.1.2-3]"
    },
    "TP_MQTT_CLIENT_CONNECT_05": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '1'B;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '1'B,\n\t\t\t\twill_qos corresponding to VALID_QOS;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\twill_topic indicating value not omit,\n\t\t\t\twill_message indicating value not omit;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_05",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with valid Last Will Testament settings.",
      "reference": "[MQTT-3.1.2-9], [MQTT-3.1.2-14]"
    },
    "TP_MQTT_CLIENT_CONNECT_06": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '0'B;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '0'B,\n\t\t\t\twill_qos corresponding to AT_MOST_ONCE,\n\t\t\t\twill_retain indicating value '0'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\twill_topic indicating value omit,\n\t\t\t\twill_message indicating value omit;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_06",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets without Last Will Testament.",
      "reference": "[MQTT-3.1.2-11], [MQTT-3.1.2-13], [MQTT-3.1.2-15]"
    },
    "TP_MQTT_CLIENT_CONNECT_07": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '0'B;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '0'B,\n\t\t\t\tpassword_flag indicating value '0'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tuser_name indicating value omit,\n\t\t\t\tpassword indicating value omit;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_07",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with valid settings",
      "reference": "[MQTT-3.1.2-18], [MQTT-3.1.2-20], [MQTT-3.1.2-22]"
    },
    "TP_MQTT_CLIENT_CONNECT_08": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '0'B;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '0'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tuser_name indicating value not omit,\n\t\t\t\tpassword indicating value omit;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_08",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with only a User Name.",
      "reference": "[MQTT-3.1.2-19]"
    },
    "TP_MQTT_CLIENT_CONNECT_09": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '1'B;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tuser_name indicating value not omit,\n\t\t\t\tpassword indicating value not omit;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_09",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with a User Name and Password.",
      "reference": "[MQTT-3.1.2-21], [MQTT-3.1.2-21]"
    },
    "TP_MQTT_CLIENT_CONNECT_10": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '1'B,\n\t\t\t\twill_flag indicating value '1'B,\n\t\t\t\twill_qos corresponding to AT_MOST_ONCE;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to VALID_CLIENT_ID,\n\t\t\t\twill_topic corresponding to PX_WILL_TOPIC,\n\t\t\t\twill_message corresponding to PX_WILL_MESSAGE,\n\t\t\t\tuser_name corresponding to PX_MQTT_USER_NAME,\n\t\t\t\tpassword corresponding to PX_MQTT_PASSWORD;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\t// Assumption: by comparing each field with the sent values, the order is checked implicitly.\n\t\t\t\t// Wrong order would silently swap the fields during decoding\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B,\n\t\t\t\tpassword_flag indicating value '1'B,\n\t\t\t\twill_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to VALID_CLIENT_ID,\n\t\t\t\twill_topic corresponding to PX_WILL_TOPIC,\n\t\t\t\twill_message corresponding to PX_WILL_MESSAGE,\n\t\t\t\tuser_name corresponding to PX_MQTT_USER_NAME,\n\t\t\t\tpassword corresponding to PX_MQTT_PASSWORD;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_10",
      "init": "",
      "objective": "Verify that the IUT sends CONNECT Control Packets with Payload fields",
      "reference": "[MQTT-3.1.3-1]"
    },
    "TP_MQTT_CLIENT_CONNECT_11": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to VALID_CLIENT_ID;\t // TODO: required to trigger a concrete Client ID?\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\t// TODO: sufficient for [MQTT-3.1.3-4] ?\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to VALID_CLIENT_ID;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_11",
      "init": "",
      "objective": "Verify that the IUT is able to send CONNECT Control Packets with a",
      "reference": "[MQTT-3.1.3-4], [MQTT-1.5.3-1] //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?"
    },
    "TP_MQTT_CLIENT_CONNECT_12": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to CLIENT_ID_ZERO_BYTES;\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tclean_session indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tclient_identifier corresponding to CLIENT_ID_ZERO_BYTES;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_12",
      "init": "",
      "objective": "Verify that the IUT sets the clean_session flag to 1 if it connects",
      "reference": "[MQTT-3.1.3-7]"
    },
    "TP_MQTT_CLIENT_CONNECT_13": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\twill_topic corresponding to PX_WILL_TOPIC;\t// TODO: required to trigger a concrete topic?\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\t// TODO: sufficient for [MQTT-3.1.3-10] ?\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\twill_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\twill_topic corresponding to TOPIC_NAME_VALID;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_13",
      "init": "",
      "objective": "Verify that IUT encodes the Will Topic to well-formed UTF-8 encoded string.",
      "reference": "[MQTT-3.1.3-10] //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?"
    },
    "TP_MQTT_CLIENT_CONNECT_14": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tuser_name corresponding to PX_MQTT_USER_NAME;\t // TODO: required to trigger a concrete username?\n\t\t\t\t;\n\t\t\t} then {\n\t\t\t\t// TODO: sufficient for [MQTT-3.1.3-11] ?\n\t\t\t\tthe IUT entity sends a CONNECT message containing\n\t\t\t\tconnect_flags containing\n\t\t\t\tuser_name_flag indicating value '1'B;\n\t\t\t\t,\n\t\t\t\tpayload containing\n\t\t\t\tuser_name corresponding to USER_NAME_VALID_UTF8;\n\t\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_CONNECT_14",
      "init": "",
      "objective": "Verify that IUT encodes the User Name to well-formed UTF-8 encoded string.",
      "reference": "[MQTT-3.1.3-11] //, [MQTT-1.5.3-2], [MQTT-1.5.3-3] // TODO: how to test 3-2 and 3-3?"
    },
    "TP_MQTT_CLIENT_DISCONNECT_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a DISCONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a DISCONNECT message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_DISCONNECT_01",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send DISCONNECT Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_DISCONNECT_02": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a DISCONNECT message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a DISCONNECT message\n\t\t\t\tand\n\t\t\t\tthe IUT entity closes the TCP_CONNECTION\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_DISCONNECT_02",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT closes the network connection after sending a DISCONNECT Control Packet.",
      "reference": "[MQTT-3.14.4-1]"
    },
    "TP_MQTT_CLIENT_PUBACK_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to AT_LEAST_ONCE,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBACK message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBACK_01",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\tand\n\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send PUBACK Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_PUBACK_02": {
      "PICS": [
        "PICS_CLIENT_QOS_1"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to AT_LEAST_ONCE,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC,\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBACK message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBACK_02",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\tand\n\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT acknowledges a PUBLISH Control Packet with the correct packet identifier.",
      "reference": "[MQTT-2.3.1-6]"
    },
    "TP_MQTT_CLIENT_PUBCOMP_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBREL message\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBCOMP message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBCOMP_01",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\tand\n\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send PUBCOMP Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_MOST_ONCE;\n\t\t\t;\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_MOST_ONCE,\n\t\t\t\tdup_flag indicating value '0'B;\n\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_01",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT sets the DUP flag to 0 for all QoS 0 PUBLISH Control Packets.",
      "reference": "[MQTT-3.3.1-2]"
    },
    "TP_MQTT_CLIENT_PUBLISH_02": {
      "PICS": [
        "PICS_CLIENT_QOS_1"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_LEAST_ONCE;\n\t\t\t;\n\t\t\t} then {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_LEAST_ONCE,\n\t\t\t\tdup_flag indicating value '0'B;\n\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_02",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT sets the DUP flag to 0 for all QoS 1 PUBLISH Control Packets.",
      "reference": "[MQTT-3.3.1-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_03": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\t\tqos_level corresponding to EXACTLY_ONCE;\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing header containing\n\t\t\t\tqos_level corresponding to EXACTLY_ONCE,\n\t\t\t\tdup_flag indicating value '0'B;\n\t\t\t;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_03",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT sets the DUP flag to 0 for all QoS 2 PUBLISH Control Packets.",
      "reference": "[MQTT-3.3.1-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_04": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\ttopic_name not corresponding to TOPIC_NAME_INVALID_UTF8;\t// valid topic name MUST contain only valid UTF-8\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_04",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that IUT encodes the topic name to a well-formed UTF-8 encoded string.",
      "reference": "[MQTT-3.3.2-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_05": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\ttopic_name corresponding to TOPIC_NAME_VALID;\t // valid topic name MUST NOT contain wildcards\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_05",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT does not send PUBLISH Control Packets which contain",
      "reference": "[MQTT-3.3.2-2]"
    },
    "TP_MQTT_CLIENT_PUBLISH_06": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to AT_MOST_ONCE,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC;;\n\t\t\t} then {\n\t\t\tthe IUT entity sends no response message\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_06",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t\tand\n\t\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT does not send any response on reception of a QoS level 0 PUBLISH Control Packet.",
      "reference": "[MQTT-3.3.4-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_07": {
      "PICS": [
        "PICS_CLIENT_QOS_1"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to AT_LEAST_ONCE,\n\t\t\t\tpacket_identifier corresponding to PACKET_ID,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC;;\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBACK message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_07",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t\tand\n\t\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT responds to a QoS level 1 PUBLISH Control Packet with a PUBACK Control Packet.",
      "reference": "[MQTT-3.3.4-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_08": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to EXACTLY_ONCE,\n\t\t\t\tpacket_identifier corresponding to PACKET_ID,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC;;\n\t\t\t} then {\n\t\t\tthe IUT entity sends a PUBREC message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_08",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t\tand\n\t\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT responds to a QoS level 2 PUBLISH Control Packet",
      "reference": "[MQTT-3.3.4-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_09": {
      "PICS": [
        "PICS_CLIENT_QOS_1"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_LEAST_ONCE;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_NON_ZERO;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_09",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT assigns a non-zero packet identifier on each new PUBLISH Control Packet",
      "reference": "[MQTT-2.3.1-1]"
    },
    "TP_MQTT_CLIENT_PUBLISH_10": {
      "PICS": [
        "PICS_CLIENT_QOS_1"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_LEAST_ONCE;;\n\t\t\tand\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_LEAST_ONCE;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_1;\n\t\t\tand\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_2;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_10",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT assigns a currently unused packet identifier on each new PUBLISH Control Packet",
      "reference": "[MQTT-2.3.1-2]"
    },
    "TP_MQTT_CLIENT_PUBLISH_11": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a PUBLISH message containing\n\t\t\theader containing\n\t\t\t\tqos_level corresponding to AT_MOST_ONCE;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBLISH message containing\n\t\t\t\tpacket_identifier indicating value omit;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBLISH_11",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT does not assign a packet identifier on PUBLISH Control Packet",
      "reference": "[MQTT-2.3.1-5]"
    },
    "TP_MQTT_CLIENT_PUBREC_01": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to EXACTLY_ONCE,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBREC message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBREC_01",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\tand\n\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send PUBREC Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_PUBREC_02": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBLISH message containing\n\t\t\t\theader containing\n\t\t\t\t\tqos_level corresponding to EXACTLY_ONCE,\n\t\t\t\ttopic_name corresponding to PX_PUBLISH_TOPIC,\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBREC message containing\n\t\t\t\tacket_identifier corresponding to PACKET_ID;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBREC_02",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\tand\n\t\tthe IUT entity subscribed the PX_PUBLISH_TOPIC to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT acknowledges a PUBLISH Control Packet with the correct packet identifier.",
      "reference": "[MQTT-2.3.1-6]"
    },
    "TP_MQTT_CLIENT_PUBREL_01": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBREC message\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBREL message containing\n\t\t\t\theader_flags indicating value '0000'B;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBREL_01",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send PUBREL Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1]"
    },
    "TP_MQTT_CLIENT_PUBREL_02": {
      "PICS": [
        "PICS_CLIENT_QOS_2"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity receives a PUBREC message containing\n\t\t\tpacket_identifier corresponding to PACKET_ID;\n\t\t} then {\n\t\t\tthe IUT entity sends a PUBREL message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_PUBREL_02",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT acknowledges a PUBREC Control Packet with the correct packet identifier with a PUBREL Control Packet.",
      "reference": "[MQTT-2.3.1-6]"
    },
    "TP_MQTT_CLIENT_SUBSCRIBE_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a SUBSCRIBE message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a SUBSCRIBE message containing\n\t\t\t\theader_flags indicating value '0010'B;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_SUBSCRIBE_01",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send SUBSCRIBE Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1], [MQTT-3.8.1-1]"
    },
    "TP_MQTT_CLIENT_SUBSCRIBE_02": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a SUBSCRIBE message\n\t\t} then {\n\t\t\tthe IUT entity sends a SUBSCRIBE message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_1;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_SUBSCRIBE_02",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT assigns a non-zero packet identifier on each new",
      "reference": "[MQTT-2.3.1-2]"
    },
    "TP_MQTT_CLIENT_SUBSCRIBE_03": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a SUBSCRIBE message\n\t\t\tand\n\t\t\tthe IUT entity is triggered to send a SUBSCRIBE message\n\t\t} then {\n\t\t\tthe IUT entity sends a SUBSCRIBE message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_1;\n\t\t\tand\n\t\t\tthe IUT entity sends a SUBSCRIBE message containing\n\t\t\t\tpacket_identifier corresponding to PACKET_ID_2;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_SUBSCRIBE_03",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT assigns a currently unsued packet identifier on each new",
      "reference": "[MQTT-2.3.1-2]"
    },
    "TP_MQTT_CLIENT_UNSUBSCRIBE_01": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\t\twhen {\n\t\t\t\tthe IUT entity is triggered to send a UNSUBSCRIBE message\n\t\t\t} then {\n\t\t\t\tthe IUT entity sends a UNSUBSCRIBE message containing\n\t\t\t\theader_flags indicating value '0010'B;\n\t\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_UNSUBSCRIBE_01",
      "init": "\t\twith {\n\t\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that the IUT is able to send UNSUBSCRIBE Control Packets with valid Header Flags.",
      "reference": "[MQTT-2.2.2-1], [MQTT-3.10.1-1]"
    },
    "TP_MQTT_CLIENT_UNSUBSCRIBE_02": {
      "PICS": [
        "PICS_CLIENT_BASIC"
      ],
      "expected": "\t\tensure that {\n\t\twhen {\n\t\t\tthe IUT entity is triggered to send a UNSUBSCRIBE message\n\t\t} then {\n\t\t\tthe IUT entity sends a UNSUBSCRIBE message containing\n\t\t\t\tpayload containing\n\t\t\t\ttopic_filter not corresponding to TOPIC_FILTER_INVALID_UTF8;;\n\t\t}\n\t\t}\n",
      "id": "TP_MQTT_Client_UNSUBSCRIBE_02",
      "init": "\t\twith {\n\t\tthe IUT entity having a MQTT_CONNECTION to the TEST_SYSTEM entity\n\t\t}\n",
      "objective": "Verify that IUT encodes the topic filter to a well-formed UTF-8 encoded string.",
      "reference": "[MQTT-3.10.3-1]"
    }
  }
}